#!/usr/bin/env python
# coding: utf-8

# In[61]:


import requests 
# Load the Pandas libraries with alias 'pd' 
import pandas as pd   
import requests
import json
from datetime import datetime, timedelta
import requests_cache
from functools import lru_cache

requests_cache.install_cache(cache_name='sdgs_cache', backend='sqlite', expire_after=180)
requests_cache.remove_expired_responses()

#url = "https://api.truvaluelabs.com/v2/sdg/orgs/spotlights"
url = "https://api.truvaluelabs.com/v2/sdg/orgs/scores"
accesstoken = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhcHBOYW1lIjoidHZsQXBpIiwidXNlcklkIjoiZmM3OGI0YjUtMDM4Zi00NmMzLThkYjQtYWZkOTYwM2U4MmI4IiwiZ3JvdXBJZCI6IjJkN2YxODliLTEzYjctNGJmMC04MTUzLTlhOTQxY2RkNjY3NiIsImlhdCI6MTYwNzQ2MzM1NywiaXNzIjoiaHR0cHM6Ly9hdXRoLnRydXZhbHVlbGFicy5jb20ifQ.RgEc_ZpOK2kdH7PYKwGIhpT5KgXUpBICOVIOTkIfIJc"
ids = "US0378331005,US5949181045,US0231351067,US30303M1027,US02079K3059,US02079K1079,US88160R1014,US0846707026,US4781601046,US46625H1005,US92826C8394,US7427181091,US91324P1021,US67066G1040,US57636Q1040,US4370761029,US2546871060,US70450Y1038,US92343V1044,US00724F1012,US20030N1019,US7170811035,US0605051046,US64110L1061,US4581401001,US00206R1023,US58933Y1055,US9311421039,US1912161007,US7134481081,US79466L3024,US17275R1023,US8835561023,US00287Y1091,US0028241000,US7475251036,US1667641005,US30231G1022,US6541061031,US22160K1051,US11135F1012,IE00B4BNMY34,US5801351017,US8825081040,IE00BTN1Y115,US4385161066,US65339F1012,US2358511028,US9078181081,US1101221083,US0311621009,IE00BZ12WP82,US7181721090,US0970231058,US5324571083,US1729674242,US8552441094,US9113121068,US68389X1054,US5486611073,US4592001014,US9497461015,US0079031078,US09247X1019,US75513E1010,US16119P1084,US81762P1021,US03027X1000,US1491231015,US1266501006,US88579Y1010,US3696041033,US4612021034,US31620M1062,US5398301094,US46120E6023,US09857L1089,US87612E1064,US6174464486,US6092071058,US8636671013,US0382221051,US0258161092,US78409V1044,US5951121038,US0367521038,US38141G1040,US1255231003,US8725401090,US8522341036,US02209S1033,US3755581036,US98978V1035,US0530151036,US90353T1007,US5128071082,US8085131055,US8725901040,US1941621039,US74340W1036,US31428X1063,US2441991054,US1264081035,CH0044328745,US98980L1017,US22822V1017,US26441C2044,US3377381088,US0758871091,US12572Q1058,US8425871071,US89832Q1094,US25746U1097,US4523081093,US00507V1098,US0527691069,US29444U7000,US6558441084,US9029733048,US6934751057,US45866F1049,US0091581068,US37940X1028,US5717481023,US92532F1003,US8243481061,US2788651006,US37045V1008,US5184391044,US2566771059,US4448591028,US28176E1082,US0326541051,US7433151039,--,US4523271090,US94106L1098,US6516391066,US1011371077,US26614N1028,US75886F1075,IE00BLP1HW54,US2910111044,US6668071029,IE00B8KQN827,US4943681035,US20825C1045,US6153691059,US60770K1079,LU1778762911,US7766961061,US1924461023,US90138F1021,US14040H1059,US5500211090,US2561631068,US0255371017,US5024311095,US40412C1018,US4824801009,US0669224778,US0162551016,US30161N1019,US7782961038,US0718131099,US2605571031,US98138H1014,US3695501086,US45168D1046,US09062X1037,US0320951017,US88339J1051,US1696561059,US2855121099,US8168511090,US15135B1017,BMG475671050,US8718291078,US90184L1026,US59156R1086,US3703341046,US9839191015,US2538681030,US3453708600,US8716071076,US9224751084,US5719032022,US35671D8570,US00846U1016,US5950171042,US98389B1008,US7010941042,US55354G1004,US22160N1090,US0268747849,US74144T1088,US6935061076,US74460D1090,US40434L1052,US89417E1091,IE00BK9ZQ967,IE00BY7QL619,US21036P1084,US2786421030,JE00B783TY65,US67103H1077,US1273871087,US0200021014,US2310211063,US46266C1053,US61174X1090,US0640581007,US57667L1070,US0010551028,US14448C1045,US77543R1023,US9884981013,US7443201022,AN8068571086,US78410G1040,US8936411003,US1729081059,US2521311074,US92345Y1064,US9314271084,US0584981064,US98956P1021,US7611521078,US26875P1012,US7043261079,US43300A2033,US30040W1080,US92939U1060,US7185461040,US03662Q1058,US6937181088,GB00BZ09BD16,BMG5876H1051,US7445731067,US6200763075,US8288061091,US49456B1017,US6974351057,US58155Q1031,US22052L1044,US6792951054,US9182041080,US7739031091,US72352L1061,US8447411088,US2193501051,US3119001044,US0394831020,US8545021011,US95040Q1040,US56585A1025,US0304201033,US0533321024,US0311001004,US76680R2067,US2473617023,IE00BDB6Q211,US8574771031,US68902V1070,US5926881054,US9694571004,US2567461080,US22788C1053,US83088M1027,US0153511094,US1890541097,US2547091080,US2091151041,US8486371045,US23331A1097,US0534841012,US91913Y1001,US2333311072,US5010441013,US0865161014,US03076C1062,US49338L1035,US2172041061,US5797802064,US98850P1093,US57772K1016,US29476L1070,US3390411052,US9621661043,NL0009434992,US69351T1060,US4278661081,US1567821046,US33616C1009,US2810201077,US3635761097,US12504L1098,US81181C1045,US5007541064,US70432V1026,US22266L1061,US0152711091,US1713401024,US29364G1031,US48251W1045,US92556V1061,US57060D1081,US92343E1029,US7561091049,US87918A1051,US5260571048,US2944291051,US8740541094,US34959J1088,US6795801009,US30063P1057,US7607591002,US92556H2067,US9553061055,US9892071054,US9024941034,US5178341070,US3167731005,US8807701029,US0236081024,US9291601097,US50540R4092,US4601461035,US87165B1035,US74736K1016,US4364401012,US12514G1085,US29786A1060,US4851703029,US92276F1003,CH0114405324,US78486Q1013,US7237871071,US3848021040,US6658591044,US89400J1079,JE00BJ1F3079,US9113631090,US24703L2025,US5732841060,US98419M1009,US8793691069,US2600031080,US6826801036,US5303073051,US1258961002,US30212P3038,US29414B1044,US34959E1091,US9022521051,US2058871029,US6703461052,US11133T1034,US46187W1071,US2166484020,US4062161017,US42250P1030,US83088V1026,US2971781057,US78467J1007,US45784P1012,US74834L1008,US00971T1016,US0404131064,US1773761002,US55261F1049,US69331C1080,US14149Y1082,US4165151048,US7140461093,US8865471085,US1011211018,US4435731009,US3379321074,US8923561067,IE00BFY8C754,US94419L1017,US92220P1057,US98954M2008,US8962391004,US4878361082,US1431301027,US7591EP1005,US45687V1061,US42824C1099,US9581021055,US6745991058,US3024913036,US4932671088,US45337C1027,US1488061029,US98936J1016,US1508701034,JE00BYSS4X48,US23804L1035,US1746101054,US25754A2015,US3021301094,US6311031081,US1220171060,US0126531013,US90384S3031,US2371941053,US30225T1025,US1156372096,US03073E1055,US02043Q1076,US9418481035,US45167R1041,LR0008862868,US59522J1034,US05722G1004,US8666741041,US2644115055,US09061G1013,US9100471096,US42809H1077,US1468691027,US60937P1066,US5253271028,US3802371076,US3032501047,US5529531015,US6098391054,US8793601050,US4698141078,US05338G1067,US74251V1026,US9297401088,US5745991068,US00130H1059,US2774321002,US9256521090,US49271V1008,US3724601055,US16411R2085,US6819191064,US29355A1079,US05352A1007,IE00BQPVQZ61,US83417M1045,US3666511072,US62944T1051,US5705351048,US64110D1046,US09215C1053,US0188021085,US28414H1032,BMG0450A1053,US4404521001,US29362U1043,KYG851581069,US3030751057,US4461501045,US8326964058,US5747951003,US73278L1052,US6951561090,US3687361044,US2283681060,US0536111091,US1924221039,US60855R1005,US98980G1022,US6821891057,US30034W1062,US12541W2098,US4595061015,US20605P1012,US02005N1000,US0036541003,US92936U1097,US1720621010,US4262811015,US09073M1045,US0995021062,US0905722072,US9026531049,US67020Y1001,US24906P1093,US0357104092,US7458671010,US0495601058,US1598641074,US4456581077,US7547301090,US15189T1079,US96145D1054,US69370C1009,US9633201069,US34964C1062,US4180561072,US70614W1009,US8036071004,US91879Q1094,US6556631025,US7496851038,US5018892084,US12685J1051,US9285634021,US55087P1049,US3841091040,US5132721045,US8832031012,PA1436583006,NL0012169213,US1567001060,US9837931008,US44891N1090,US02156K1034,US6687711084,US9831341071,US1152361010,US58463J3041,US29452E1010,US44107P1049,US29670G1022,US29472R1086,IE00BFRT3W74,US3156161024,US40171V1008,US5404241086,US5341871094,US15677J1088,US35137L1052,US12503M1080,US40131M1099,US91347P1057,US00751Y1064,US31620R3030,US1091941005,US5380341090,US4432011082,US37959E1029,US8910921084,US74762E1029,US8064071025,US8330341012,US7599161095,US4228062083,US9139031002,US2254471012,US5261071071,US1630921096,US4606901001,US5218652049,US0997241064,US3383071012,US1331311027,US0453271035,US7234841010,US03272L1089,US92840M1027,NL0013056914,US36164V3050,US65473P1057,US5017971046,US23918K1088,US0844231029,BMG3223R1088,US25470M1099,US40416M1053,GB0022569080,US18915M1071,US9598021098,US33829M1018,US89531P1057,US6819361006,US03852U1060,US2655041000,US00123Q1040,US8175651046,US88025U1097,US96208T1043,US5312298541,US46284V1017,US02376R1023,US36467J1088,US1344291091,US1005571070,US4435106079,US64125C1099,US0171751003,IE00BLS09M33,US7757111049,BMG667211046,US60871R2094,US92339V1008,BMG7496G1033,US55306N1046,US0383361039,US25470F3029,US7588491032,US3364331070,US6293775085,US03768E1055,US6907421019,US8760301072,US9699041011,BMG169621056,US1252691001,US3719011096,US6512291062,US0234361089,US4492531037,US29261A1007,IE00B4Q5ZN47,US7593516047,US1423391002,US3397501012,US23283R1005,US98986T1088,US8581191009,US04621X1081,US6081901042,US5962781010,US00766T1007,US82968B1035,US61945C1036,US8621211007,US50212V1008,US7595091023,US05464C1018,US6501111073,BMG3922B1072,GB00BFMBMT84,US02665T3068,US70975L1070,US8318652091,US44980X1090,US16359R1032,US0427351004,US48020Q1076,US7802871084,US2782651036,US9026811052,US9290891004,US2003401070,US1717793095,US45772F1075,US2681501092,US9290421091,US74838J1016,US48203R1041,US5312296073,US3205171057,US9426222009,US49427F1084,US81211K1007,US9120081099,US0900431000,US08862E1091,US7703231032,US08579W1036,US8101861065,US25278X1090,BMG491BT1088,US65249B1098,US69354M1080,US83200N1037,US1475281036,US5128161099,US03064D1081,US55024U1097,US2005251036,US2576511099,LU0974299876,US9897011071,US88087E1001,US6374171063,US31188V1008,US70438V1061,US4622221004,US98954M1018,US9807451037,IE00BGH1M568,US6936561009,US3137472060,US5339001068,US4464131063,US27579R1041,US7434241037,US5627501092,US45073V1089,US2987361092,US6708371033,US7841171033,US5002551043,US1270971039,--,US49446R1095,US82669G1040,US02156B1035,US4314751029,US2296631094,US0259321042,BMG0750C1082,US4622601007,US3546131018,US8589121081,US25179M1036,US4001101025,US03748R7474,US75606N1090,US87612G1013,US72703H1014,US12508E1010,US8354951027,US21871D1037,US23355L1061,GB00BWFY5505,US0116591092,US1271903049,US5370081045,US76169C1009,US00434H1086,US4663131039,US0248351001,US7374461041,US4128221086,VGG1890L1076,US4228061093,US1170431092,US0042251084,US30161Q1040,US6882392011,US7436061052,US4050241003,US1167941087,US5246601075,US8894781033,US69355F1021,US9576381092,US42225P5017,US8086251076,US25659T1079,US7127041058,US74164M1080,US0374111054,US91307C1027,US5534981064,US29530P1021,US05605H1005,US8851601018,US7310681025,US98311A1051,US0010841023,US3024451011,US4571871023,US47233W1099,US74624M1027,US8753722037,US5770811025,US25960P1093,US85571B1052,US5658491064,US32054K1034,US4990491049,US6370711011,US8723071036,US67059N1081,US7055731035,US53223X1072,US56418H1005,US8305661055,US8926721064,US5526901096,US31847R1023,US5150981018,BMG0684D1074,US29415F1049,US6802231042,US26210C1045,US6365181022,US21870Q1058,US4470111075,US65336K1034,US2227955026,US4771431016,US1727551004,US88023U1016,US4103451021,US2298991090,US01973R1014,US87166B1026,US2315611010,US20602D1019,US34354P1057,US91529Y1064,US6494451031,US84265V1052,US4282911084,US7512121010,US03990B1017,US87161C5013,US7587501039,US3886891015,US35137L2043,US4884011002,US00508Y1029,US11120U1051,US4511071064,US8873891043,US78440X1019,PR7331747001,KYG4412G1010,US29978A1043,US1638511089,US3795772082,US4108671052,US0082521081,US3434981011,US15912K1007,GB00BMVP7Y09,US6177001095,BMG0692U1099,US25470F1049,US3448491049,US4361061082,US6811161099,US62886E1082,US72346Q1040,US78442P1066,US92047W1018,US92537N1081,US4312841087,US5893781089,US00912X3026,US0441861046,US84860W3007,US98421M1062,US7018771029,US5303071071,US4440971095,US5528481030,US38526M1062,BMG540501027,US4198701009,US1717981013,US35905A1097,US31946M1036,US45841N1072,US05329W1027,US26969P1084,US98310W1080,US1462291097,US95058W1009,US00650F1093,US29977A1051,US5535301064,US3029411093,US7005171050,US74915M1009,US9288811014,US78667J1088,US44930G1076,US4579852082,US26884L1098,US46590V1008,US64828T2015,US0185811082,US0235861004,US8485741099,US3647601083,US1699051066,US6361801011,US06417N1037,US1940141062,US7549071030,US04247X1028,US1844961078,US9202531011,US97650W1080,US78573M1045,US00404A1097,IE00BDVJJQ56,US1156371007,US9478901096,US2243991054,US2533931026,US0936711052,US5312294094,US31816Q1013,US14316J1088,US55825T1034,US9042141039,US87162W1009,US6556641008,US10922N1037,US2946001011,US0625401098,US85917A1007,US6806652052,US9043111072,US2946281027,US1924791031,US75615P1030,US91336L1070,US28618M1062,US2253101016,US0538071038,US38388F1084,US64829B1008,US98212B1035,US4972661064,US7835491082,US32051X1081,US8969452015,US09609G1004,US4052171000,US44267D1072,US3025201019,US22002T1088,US6402681083,US9043112062,BMG9618E1075,US67018T1051,US84790A1051,US69007J1060,IE00B56GVS15,US69553P1003,US6952631033,US8270481091,US52603B1070,US20337X1090,US9604131022,US05351W1036,US39874R1014,US68268W1036,US5840211099,US29272W1099,US00847X1046,US9487411038,US0454871056,US6515871076,US03784Y2000,US4485791028,PAP310761054,US89469A1043,US85208M1027,US8766641034,US37890U1088,BMG0585R1060,US1985161066,US4234521015,US30224P2002,US83001A1025,US88076W1036,US26484T1060,US55608B1052,US26884U1097,US90214J1016,US1270551013,US8965221091,US98156Q1085,US2220702037,US92552V1008,US05561Q2012,US90353W1036,US74051N1028,US65249B2088,US92766K1060,US72941B1061,US03676B1026,US3846371041,US8794338298,US1053682035,US77311W1018,US70959W1036,US69924R1086,US80283M1018,US6267171022,US55826T1025,US9282541013,US9682232064,US2120151012,US87105L1044,US05478C1053,US76171L1061,US63947U1079,US00090Q1031,US80689H1023,US67181A1079,US5894001008,US2921041065,US52567D1072,US08975P1084,US0843101017,US2787681061,CA5359195008,US47074L1052,US02772A1097,US5260573028,US8115431079,US72147K1088,US83417Q1058,US11282X1037,US1261171003,US2641201064,US92918V1098,US5312298707,US87240R1077,US0130911037,US92556H1077,GB00BD9G2S12,US3843135084,CA5359194019,US38046W1053,US9116841084,LU1565283667"

#all_goals = "Goal1NoPoverty, Goal2ZeroHunger, Goal3GoodHealthAndWellbeing, Goal4QualityEducation, Goal5GenderEquality, Goal6CleanWaterAndSanitation, Goal7AffordableAndCleanEnergy, Goal8DecentWorkAndEconomicGrowth, Goal9IndustryInnovationAndInfrastructure, Goal10ReducedInequalities, Goal11SustainableCitiesAndCommunities, Goal12ResponsibleConsumptionAndProduction, Goal13ClimateAction, Goal14LifeBelowWater, Goal15LifeOnLand, Goal16PeaceJusticeAndStrongInstitutions"
all_sdg_goals = [ "Goal1NoPoverty", "Goal2ZeroHunger", "Goal3GoodHealthAndWellbeing", "Goal4QualityEducation", 
                  "Goal5GenderEquality", "Goal6CleanWaterAndSanitation", "Goal7AffordableAndCleanEnergy", 
                  "Goal8DecentWorkAndEconomicGrowth", "Goal9IndustryInnovationAndInfrastructure", 
                  "Goal10ReducedInequalities", "Goal11SustainableCitiesAndCommunities", 
                  "Goal12ResponsibleConsumptionAndProduction", "Goal13ClimateAction", "Goal14LifeBelowWater", 
                  "Goal15LifeOnLand", "Goal16PeaceJusticeAndStrongInstitutions" ]
all_sdg_goals_str = ",".join(all_sdg_goals)

headers = { "Authorization": "Bearer " + accesstoken }

today = datetime.today() - timedelta(days = 1)
oneYearAgo = today - timedelta(days = 366)
startDate = oneYearAgo.strftime('%Y-%m-%d')
endDate = today.strftime('%Y-%m-%d')

params = {
  "ids": ids,
  "start": startDate,
  "end": endDate,
  "categories": all_sdg_goals_str,    
  "types": "ttmVolume"
}

response = requests.get(url, headers = headers, params = params)
#print(json.dumps(response.json(), indent = 2))

@lru_cache
def calcVolume():

    sdg_array = []

    sdg_dict_all = {}
    for sdg_goal in all_sdg_goals:
        sdg_dict_all[ sdg_goal ] = 0

    for row in response.json()[ 'data' ]:  
        scores = row[ 'scores'][ 0 ]

        #for scores in row[ 'scores' ]:
        #print( row ) 
        sdg_dict = {}
        sdg_dict[ 'orgTvlId '] = row[ 'orgTvlId']
        sdg_dict[ 'orgName ']  = row[ 'orgName']

        for sdg_goal in all_sdg_goals:
            #print( scores[ 'ttmVolume' ][ 'Goal1NoPoverty'] )
            #dynamic_impact = scores[ 'ttmVolume' ][ sdg_goal ] / sum(scores[ 'ttmVolume' ].values()) * 100
            #sdg_dict[ sdg_goal ] = scores[ 'dynamicMateriality' ][ sdg_goal ]        
            sdg_dict_all[ sdg_goal ] += scores[ 'ttmVolume' ][ sdg_goal ]

        sdg_array.append( sdg_dict )

    #print( sdg_array )
    #print( sdg_dict_all )

    final_result_dict = {}
    total_ttmVolume = sum(sdg_dict_all.values())

    for sdg_goal in all_sdg_goals:
        final_result_dict[ sdg_goal ] = (sdg_dict_all[ sdg_goal ] / total_ttmVolume) * 100

    #In Percentage Points (i.e. Dynamic Impact %)
    #print( final_result_dict )
    #print( sum(final_result_dict.values())) #sanity check it all adds up to 100%..

    result = []

    for k, v in final_result_dict.items():
        result.append({'name': k, 'y': v})

    print(json.dumps(result))
    
calcVolume()
